{"version":3,"sources":["myComponents/images/icon-sun.svg","myComponents/images/icon-moon.svg","myComponents/Header.jsx","myComponents/CreateTodo.jsx","myComponents/images/icon-cross.svg","myComponents/TodoList.jsx","myComponents/Listfooter.jsx","App.js","index.js"],"names":["Header","props","useState","dark","themeIcon","setthemeIcon","className","src","alt","onClick","settheme","prev","light","CreateTodo","setlist","listItems","setfilteredList","inputList","setinputList","onSubmit","e","preventDefault","myTodo","id","length","text","completed","alert","type","placeholder","value","onChange","target","handleOnChange","TodoList","filteredList","checkedListStyle","textDecoration","color","createdListItems","map","listItem","name","updatedTodos","todo","handleOnchecked","checked","style","listId","window","confirm","afterDeletion","filter","list","onDelete","cross","Listfooter","filterTodoList","filterType","completedList","item","activeList","cursor","App","theme","useEffect","localStorage","setItem","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31c1b62a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import dark from './images/icon-sun.svg';\r\nimport light from './images/icon-moon.svg';\r\nimport React, { useState} from 'react';\r\n\r\nexport default function Header(props) {\r\n    const [themeIcon, setthemeIcon] = useState(dark);\r\n    \r\n    const changeTheme = () => {\r\n        props.settheme((prev) => {\r\n            return prev === \"dark\" ? \"light\" : \"dark\";\r\n        })\r\n        setthemeIcon((prev) => {\r\n            return prev === dark ? light : dark;\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <header className=\"header-title\">TODO</header>\r\n            <img src={themeIcon} alt=\"light theme\" className=\"theme-icon\" onClick={changeTheme}/>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function CreateTodo({\r\n  setlist,\r\n  listItems,\r\n  setfilteredList\r\n}) {\r\n  const [inputList, setinputList] = useState(\"\");\r\n  const addTodo = (e) => {\r\n    let id;\r\n    e.preventDefault();\r\n    if (listItems.length === 0) id = 0;\r\n    else id = listItems[listItems.length - 1].id + 1;\r\n\r\n    let myTodo = {\r\n      id: id,\r\n      text: inputList,\r\n      completed: false,\r\n    };\r\n    if (inputList) {\r\n      setlist([...listItems, myTodo]);\r\n      setfilteredList([...listItems,myTodo])\r\n      setinputList(\"\");\r\n    } else alert(\"list can not be empty!\");\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setinputList(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"input-box\">\r\n      <form onSubmit={addTodo}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Create a new todo\"\r\n          value={inputList}\r\n          className=\"create-todo\"\r\n          onChange={(e) => {\r\n            handleOnChange(e);\r\n          }}\r\n        />\r\n        <input type=\"submit\" value=\"\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import React from \"react\";\r\nimport cross from \"./images/icon-cross.svg\";\r\n\r\nexport default function TodoList({\r\n  listItems,\r\n  setlist,\r\n  filteredList,\r\n  setfilteredList\r\n})\r\n{\r\n  let checkedListStyle = {\r\n    textDecoration: \"line-through\",\r\n    color: \"rgb(75, 76, 77)\",\r\n  };\r\n\r\n  function onDelete(listId) {\r\n    // here i need to add a confirmation functionality\r\n    let final = window.confirm(\"This task will be Deleted from your Todo-List\");\r\n    if (final) {\r\n      const afterDeletion = \r\n        listItems.filter((list) => {\r\n          return listId !== list.id;\r\n        })\r\n      setlist(afterDeletion)\r\n      setfilteredList(afterDeletion)\r\n    }\r\n  }\r\n  const handleOnchecked = (id) => {\r\n    let updatedTodos = listItems.map((todo) => {\r\n      if (id === todo.id) todo.completed = !todo.completed;\r\n      return todo;\r\n    });\r\n    setlist(updatedTodos);\r\n  };\r\n\r\n  let createdListItems = filteredList.length ? (\r\n    filteredList.map((listItem) => {\r\n      return (\r\n        // a unique key must pass to the top parent element when mapping\r\n        <ul key={listItem.id}>\r\n          <li className=\"list-item\" >\r\n            <input\r\n              type=\"checkbox\"\r\n              name={`checkbox${listItem.id}`}\r\n              onChange={() => {\r\n                handleOnchecked(listItem.id);\r\n              }}\r\n              checked={listItem.completed}\r\n            />\r\n            <div\r\n              className=\"list-text\"\r\n              style={listItem.completed ? checkedListStyle : {}}\r\n            >\r\n              {listItem.text}\r\n            </div>\r\n            <button\r\n              className=\"cross-btn\"\r\n              onClick={() => {\r\n                onDelete(listItem.id);\r\n              }}\r\n            >\r\n              <img src={cross} alt=\"Delete\" className=\"cross-icon\" />\r\n            </button>\r\n          </li>\r\n          <div className=\"bottom-line\"></div>\r\n        </ul>\r\n      );\r\n    })\r\n  ) : (\r\n    <div className=\"list-text\">Nathing to display</div>\r\n  );\r\n\r\n  return <div className=\"todolist\">{createdListItems}</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Listfooter({\r\n  listItems,\r\n  setlist,\r\n  filteredList,\r\n  setfilteredList,\r\n}) {\r\n  let cursorStyle = {\r\n    cursor: \"pointer\"\r\n  };\r\n  // function to filter the list\r\n  const filterTodoList = (filterType) => {\r\n    const completedList = listItems.filter((item) => item.completed);\r\n    const activeList = listItems.filter((item) => !item.completed);\r\n    if (filterType === \"all\") setfilteredList(listItems);\r\n    else if (filterType === \"active\") setfilteredList(activeList);\r\n    else setfilteredList(completedList);\r\n  };\r\n\r\n  function clearCompleted() {\r\n    const completedList = listItems.filter((item) => item.completed)\r\n    \r\n    if (completedList.length === 0) {\r\n      alert(\"You don't have any completed list\");\r\n      return;\r\n    }\r\n    let confirmation = window.confirm(\"Completed task will be deleted\");\r\n    if (confirmation) {\r\n      let activeList = listItems.filter(item => !item.completed);\r\n        setlist(activeList);\r\n        setfilteredList(activeList)\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"list-footer\">\r\n      <div className=\"no-of-items\">{filteredList.length} items</div>\r\n      <div className=\"list-type\">\r\n        <div className=\"types all\" onClick={() => filterTodoList(\"all\")}>\r\n          All\r\n        </div>\r\n        <div className=\"types active\" onClick={() => filterTodoList(\"active\")}>\r\n          Active\r\n        </div>\r\n        <div\r\n          className=\"types completed\"\r\n          onClick={() => filterTodoList(\"complted\")}\r\n        >\r\n          Completed\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"clear-completed\"\r\n        style={cursorStyle}\r\n        onClick={clearCompleted}\r\n      >\r\n        Clear completed\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport Header from './myComponents/Header';\nimport CreateTodo from './myComponents/CreateTodo';\nimport TodoList from './myComponents/TodoList';\nimport Listfooter from './myComponents/Listfooter'\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  // getting list in localstorage\n  // let localTodos = localStorage.getItem(\"todos\")\n  // parsing it into object\n  // let parsedTodo = JSON.parse(localTodos)\n  // this is just for frontend menter screenshot\n  const defaultList = [\n    {\n      id: 0,\n      text: \"Complete online JavaScript course\",\n      completed: true\n    },\n    {\n      id: 1,\n      text: \"jog around the pard\",\n      completed: false\n    },\n    {\n      id: 2,\n      text: \"10 minute meditation\",\n      completed: false\n    },\n    {\n      id: 3,\n      text: \"read for 1 hour\",\n      completed: false\n    },\n    {\n      id: 4,\n      text: \"Pick up groceries\",\n      completed: false\n    },\n    {\n      id: 5,\n      text: \"Complete Todo App on FrontEnd Mentor\",\n      completed: false\n    }\n  ]\n  // localStorage.setItem(\"todos\",defaultList)\n\n  const [listItems, setlist] = useState(defaultList)\n  const [filteredList, setfilteredList] = useState(listItems)\n  const [theme, settheme] = useState(\"dark\")\n  // useEffect will run after rendering the DOM, so rendered list is stored in local storage.\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(listItems))\n  }, [listItems])\n  return (\n    <div className={theme === \"dark\" ? \"Todo-app\" : \"Todo-app light\"}>\n      <Header settheme={settheme} />\n      <CreateTodo listItems={listItems} setlist={setlist} setfilteredList={setfilteredList}/>\n      <TodoList listItems={listItems} setlist={setlist}\n        filteredList={filteredList} setfilteredList={setfilteredList} />\n      <Listfooter listItems={listItems} setlist={setlist}\n        filteredList={filteredList} setfilteredList={setfilteredList} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\ndocument.getElementById(\"root\"));\n\n"],"sourceRoot":""}